---
title: "AI for the Second-Hand Fashion Industry"
author: Farrukh Nauman
email: farrukh.nauman@ri.se
description: "Explore how AI is revolutionizing the second-hand fashion industry through automated solutions for sustainable fashion."
keywords: [AI, second-hand fashion, dataset, fashion, automation, sustainable fashion, machine learning, computer vision]
format:
  html:
    grid:
      sidebar-width: 0px
      body-width: 1200px
      margin-width: 250px
    toc: false
    include-after-body: title-block.html
    metadata:
      og:title: "AI for the Second-Hand Fashion Industry"
      og:description: "Explore how AI is revolutionizing the second-hand fashion industry through automated solutions for sustainable fashion."
      og:type: "website"
      twitter:card: "summary_large_image"
      twitter:title: "AI for the Second-Hand Fashion Industry"
      twitter:description: "Explore how AI is revolutionizing the second-hand fashion industry through automated solutions for sustainable fashion."
    meta-tags:
      - name: "keywords"
        content: "AI, second-hand fashion, dataset, fashion, automation, sustainable fashion, machine learning, computer vision"
      - name: "description"
        content: "Explore how AI is revolutionizing the second-hand fashion industry through automated solutions for sustainable fashion."
      - name: "author"
        content: "Farrukh Nauman"
---

::: {.hero-section}
# Automating the Second-Hand Fashion Industry

The fashion industry contributes up to 10% of global greenhouse gas emissions. While the second-hand fashion sector offers a sustainable alternative, its operations remain largely manual. Our projects aim to revolutionize this industry through AI-driven automation.

::: {.hero-buttons}
[View Dataset](https://zenodo.org/records/12518734){.btn-primary}
[Read Updates](#recent-posts){.btn-secondary}
:::
:::

## Recent Updates {#recent-posts}

::: {.column-screen-inset}
:::: {.listing-block}
::: {#recent-posts-content}
:::
::::
:::

```{python}
#| echo: false
from IPython.display import HTML
import os
import yaml
from datetime import datetime
import glob

def get_post_info(post_path):
    with open(post_path, 'r') as f:
        content = f.read().split('---')
        if len(content) > 1:
            try:
                metadata = yaml.safe_load(content[1])
                return {
                    'title': metadata.get('title', ''),
                    'date': metadata.get('date', ''),
                    'description': metadata.get('description', ''),
                    'path': os.path.dirname(post_path).split('posts/')[-1]
                }
            except:
                return None
    return None

posts = []
for post_file in glob.glob('posts/*/index.qmd'):
    post_info = get_post_info(post_file)
    if post_info:
        posts.append(post_info)

# Sort posts by date, most recent first
posts.sort(key=lambda x: x['date'], reverse=True)

# Take only the 3 most recent posts
recent_posts = posts[:3]

html_content = '<div class="recent-posts-grid">'
for post in recent_posts:
    html_content += f'''
    <div class="post-card">
        <h3><a href="posts/{post['path']}">{post['title']}</a></h3>
        <p class="post-date">{post['date']}</p>
        <p class="post-description">{post['description']}</p>
    </div>
    '''
html_content += '</div>'

HTML(html_content)
```

## Project Overview

:::{.grid}
:::{.g-col-6}
<div class="image-card">
<img src="assets/damaged_tshirt.jpg" alt="damaged t-shirt" class="feature-image"/>
<div class="image-caption">AI-powered damage detection in clothing</div>
</div>
:::
:::{.g-col-6}
<div class="image-card">
<img src="assets/sorting_gemini.jpeg" alt="sorting" class="feature-image"/>
<div class="image-caption">Automated sorting process visualization</div>
</div>
:::
:::

## Dataset Statistics {#stats}

:::{.stats-section}
<div class="stats-card">
<div id="dataset-stats">Loading dataset statistics...</div>
</div>

<!-- ::: {.callout-note}
This page will be updated with tutorials with the dataset, tasks like damage detection and model comparison. Stay tuned! (Last updated: `2024-11-24`).
::: -->
:::

<script>
  async function fetchDatasetStats() {
    try {
      const response = await fetch('https://zenodo.org/api/records/13788681');
      const data = await response.json();
      const stats = `
        <div class="stats-grid">
          <div class="stat-item">
            <h3>${data.stats.downloads}</h3>
            <p>Downloads</p>
          </div>
          <div class="stat-item">
            <h3>${data.stats.views}</h3>
            <p>Views</p>
          </div>
          <div class="stat-item">
            <h3>${data.metadata.title}</h3>
            <p>Dataset Name</p>
          </div>
        </div>
      `;
      document.getElementById('dataset-stats').innerHTML = stats;
    } catch (error) {
      document.getElementById('dataset-stats').innerHTML = 'Failed to load dataset statistics.';
    }
  }

  fetchDatasetStats();
  setInterval(fetchDatasetStats, 600000);
</script>
